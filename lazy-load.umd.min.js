"use strict";function ownKeys(e,r){var t=Object.keys(e);return Object.getOwnPropertySymbols&&t.push.apply(t,Object.getOwnPropertySymbols(e)),r&&(t=t.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(t,!0).forEach(function(r){_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(t).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function _defineProperty(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var config,images,imageCount,observer,defaults={imageLoadedClass:"js-lazy-image--handled",imageSelector:".js-lazy-image",rootMargin:"50px 0px",threshold:.01};function fetchImage(e){return new Promise(function(r,t){var n=new Image;n.src=e,n.onload=r,n.onerror=t})}function preloadImage(e){var r=e.dataset.src;if(r)return fetchImage(r).then(function(){applyImage(e,r)})}function loadImagesImmediately(e){for(var r=0;r<e.length;r++){preloadImage(e[r])}}function disconnect(){observer&&observer.disconnect()}function onIntersection(e){if(0!==imageCount)for(var r=0;r<e.length;r++){var t=e[r];t.intersectionRatio>0&&(imageCount--,observer.unobserve(t.target),preloadImage(t.target))}else disconnect()}function applyImage(e,r){e.classList.add(config.imageLoadedClass),e.src=r}var LazyLoad={init:function(e){if(config=_objectSpread({},defaults,{},e),images=document.querySelectorAll(config.imageSelector),imageCount=images.length,"IntersectionObserver"in window){observer=new IntersectionObserver(onIntersection,config);for(var r=0;r<images.length;r++){var t=images[r];t.classList.contains(config.imageLoadedClass)||observer.observe(t)}}else loadImagesImmediately(images)}},_default=LazyLoad;exports.default=_default;
